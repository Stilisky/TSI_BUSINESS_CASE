{
    "openapi": "3.0.1",
    "info": {
        "version": "1.0.0",
        "title": "API de TSI BUSINESS CASE",
        "description": "TSI, an sports platform",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "servers": [
        {
            "url": "http://localhost:5000/api/v1",
            "description": "Local Development Server"
        },
        {
            "url": "http://localhost:5000/api/v1",
            "description": "Prod Development Server"
        }
    ],
    "tags": [
        {
            "name": "Auth",
            "description": "User authentication and authorization for admin and user"
        },
        {
            "name": "Users",
            "description": "User management"
        },
        {
            "name": "Players",
            "description": "Player management"
        },
        {
            "name": "Matchs",
            "description": "Matchs management"
        }
    ],
    "schemes": [
        "http",
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/auth/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user",
                "description": "New user registration",
                "parameters": [],
                "requestBody": {
                    "description": "Request Body",
                    "required": true,
                    "content": {
                        "application/json": {
                            "example": {
                                "username": "newuser",
                                "email": "newuser@mail.com",
                                "password": "password",
                                "confirm_password": "password"
                              },
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Succ√®s",
                        "content": {
                            "application/json": {
                                "example": {
                                    "_id": "6563d031804469a8be17bfa8",
                                    "username": "newuser",
                                    "email": "newuser@mail.com",
                                    "role": "USER",
                                    "__v": 0
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad parameters in request body",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "Cannot create user"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login",
                "description": "Generate a user token",
                "parameters": [],
                "requestBody": {
                    "description": "Request Body",
                    "required": true,
                    "content": {
                        "application/json": {
                            "example": {
                                "email" : "newuser@mail.com",
                                "password" : "your_password"
                            },
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0ZWUyMDUyMDA3YjkyNDU4NWVkYmNlNiIsImlhdCI6MTY5Mzk2MTQ0OSwiZXhwIjoxNjk2NTUzNDQ5fQ.l3B2rMSs6DZ9b5T2cO5Kmg9cCmnrCQx83aSnluq0O0I"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "If email or username is incorrect",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "Invalid Email Or Password"
                                }
                            }
                        }
                    }
                }
            }
        },


        "/auth/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "security": [
                    {
                        "JWTBearer": []
                    }
                ],
                "summary": "Get All users",
                "description": "All users informations",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "_id": "6563d031804469a8be17bfa8",
                                    "username": "newuser",
                                    "email": "newuser@mail.com",
                                    "role": "USER",
                                    "__v": 0
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "If token not found",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "Invalid Token"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/users/{userId}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "security": [
                    {
                        "JWTBearer": []
                    }
                ],
                "summary": "Get user",
                "description": "Get a user account information",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "_id": "6563d031804469a8be17bfa8",
                                    "username": "newuser",
                                    "email": "newuser@mail.com",
                                    "role": "USER",
                                    "__v": 0
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "If id not found in users",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "User doesn't exist"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "If token not found",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "Invalid Token"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update a user by giving his id",
                "security": [
                    {
                        "JWTBearer": []
                    }
                ],
                "description": "Return a user profile",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Request Body",
                    "required": true,
                    "content": {
                        "application/json": {
                            "example": {
                                "username": "Lomoki",
                                "email": "lomoki@mail.com"
                            },
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {  
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "_id": "6563d031804469a8be17bfa8",
                                    "username": "Lomoki",
                                    "email": "lomoki@mail.com",
                                    "role": "USER",
                                    "__v": 0
                                },
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    },
                    "400": {
                        "description": "If id not found in users",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "User doesn't exist"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "If token not found",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "Invalid Token"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete a user by giving his id",
                "security": [
                    {
                        "JWTBearer": []
                    }
                ],
                "description": "Delete a user profile",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "User successfully deleted"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "If id not found in users",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "User doesn't exist"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "If token not found",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "Invalid Token"
                                }
                            }
                        }
                    }
                }
            }
        },

        
        "/players": {
            "get": {
                "tags": [
                    "Players"
                ],
                "summary": "Get all players",
                "description": "Return all players",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": 
                                {
                                    "_id": "6563d76e10ec675493c2288d",
                                    "playerName": "LeBron James",
                                    "jerseyNumber": 6,
                                    "position": "CENTER",
                                    "image": "player.jpg",
                                    "performance": [
                                        {
                                            "_id": "656411c713d9183dd2641985",
                                            "opposingTeam": "Atlanta",
                                            "pointsScored": 75,
                                            "numberAssists": 60,
                                            "numberIntercepts": 45,
                                            "numberShotsBlocked": 18,
                                            "shotSuccess": 89,
                                            "created_at": "2023-11-27T03:45:17.477Z",
                                            "__v": 0,
                                            "player": "6563d76e10ec675493c2288d"
                                        }
                                    ],
                                    "__v": 0
                                },
                                "$ref": "#/components/schemas/Player"
                            }
                        }
                    },
                    "500": {
                        "description": "Invalid Server Error",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "Invalid Server"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Players"
                ],
                "summary": "Create a player",
                "security": [
                    {
                        "JWTBearer": []
                    }
                ],
                "description": "Route to create a player",
                "parameters": [],
                "requestBody": {
                    "description": "Request Body",
                    "required": true,
                    "content": {
                        "application/json": {
                            "example": {
                                "playerName": "Deandre Ayton",
                                "jerseyNumber": 1,
                                "position": "SHOOTING GUARD"
                            },
                            "schema": {
                                "$ref": "#/components/schemas/Player"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "_id": "6563d76e10ec675493c2288d",
                                    "playerName": "Deandre Ayton",
                                    "jerseyNumber": 1,
                                    "position": "SHOOTING GUARD",
                                    "image": "player.jpg",
                                    "__v": 0
                                },
                                "$ref": "#/components/schemas/Player"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request if body is not correct",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "Invalid Data"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "If token not found",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "Invalid Token"
                                }
                            }
                        }
                    }                    
                }
            }
        },
        "/players/{playerId}": {
            "get": {
                "tags": [
                    "Players"
                ],
                "summary": "Get a player informations",
                "description": "Return a player info by id",
                "parameters": [
                    {
                        "name": "playerId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "_id": "6563d76e10ec675493c2288d",
                                    "playerName": "Deandre Ayton",
                                    "jerseyNumber": 1,
                                    "position": "SHOOTING GUARD",
                                    "image": "player.jpg",
                                    "__v": 0
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "If the id is not found",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "User doesn't exist"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Players"
                ],
                "summary": "Update a player informations",
                "security": [
                    {
                        "JWTBearer": []
                    }
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "playerId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Request Body",
                    "required": true,
                    "content": {
                        "application/json": {
                            "example": {
                                "playerName": "Deandre Ayton",
                                    "jerseyNumber": 1,
                                    "position": "SHOOTING GUARD"
                            },
                            "schema": {
                                "$ref": "#/components/schemas/Player"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Succ√®s",
                        "content": {
                            "application/json": {
                                "example": {
                                    "_id": "6563d76e10ec675493c2288d",
                                    "playerName": "Deandre Ayton",
                                    "jerseyNumber": 1,
                                    "position": "SHOOTING GUARD",
                                    "image": "player.jpg",
                                    "__v": 0
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/Player"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "If player not found",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "Not found"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "When user is not authorized to do this action",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "Not authorized"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Players"
                ],
                "summary": "Delete a player",
                "security": [
                    {
                        "JWTBearer": []
                    }
                ],
                "description": "Delete a player by its ID by admin",
                "parameters": [
                    {
                        "name": "playerId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "Player successfully deleted"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/Player"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "If player not found",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "Not found"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "When user is not authorized to do this action",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "Not authorized"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/games": {
            "get": {
                "tags": [
                    "Matchs"
                ],
                "summary": "Get a matchs informations",
                "description": "Return all matchs",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "_id": "6564104e46b7325be0fec84d",
                                    "opposingTeam": "Equipe A",
                                    "pointsScored": 115,
                                    "numberAssists": 75,
                                    "numberIntercepts": 20,
                                    "numberShotsBlocked": 14,
                                    "shotSuccess": 80,
                                    "created_at": "2023-11-27T03:37:59.347Z",
                                    "__v": 0
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/Game"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "If the token is incorrect",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "Invalid Token"
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}